a <- available.packages()
head(rownames(a), 3)
search()
find.package("devtools")
search.packages("Rtools")
find.package("devtools")
install.packages("devtools")
find_rtools()
library(devtools)
library(devtools)
find_rtools()
library(swirl)
swirl()
dice_sqr
ex2_fair<-sum(dice_sqr*dice_fair)
ex2_fair - 3.5^2
sum(dice_sqr*dice_high) - edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
?rpois
sd(apply(matrix(rpois(10000,4),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
library(swirl)
swirl()
choose(5,3)*0.8^3*0.2^2 + choose(5,4)*0.8^4*0.2 + 0.8^5
?pbinom
pbinom(2,5,0.8,lower.tail=FALSE)
qnorm(.1)
0
qnorm(0.975,3,2)
1.96*2+3
pnorm(1200,1020,50,lower.tail=FALSE)
pnorm((1200-1020)/50)
pnorm((1200-1020)/50,lower.tail=FALSE)
qnorm(.75,1020,50)
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,0.01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
qnorm(0.95)
0.6 +c(-1,1)*qnorm(.975)*sqrt(0.6*0.4/100)
x<-pbinom.test(60,100)
x<-binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb<-5/94.32
lamb + c(-1,1)*qnorm(0.975)*sprt(lamb/94.32)
lamb + c(-1,1)*qnorm(0.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
difference<-g2-g1
mean(difference)
s<-sd(difference)
difference + c(-1,1)*qt(9)*s/sqrt(10)
mean(difference) + c(-1,1)*qt(9)*s/sqrt(10)
mean(difference) + c(-1,1)*qt(.975,9)*s/sqrt(10)
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)
t.test(difference)$conf.int
sp<-20*15.34^2+20*18.23^2
sp<-7*15.34^2+20*18.23^2
ns<-7+20
sp<-sp/ns
sp<-sqry(sp/ns)
sp<-sqrt(sp/ns)
(132.86-127.44) + c(-1,1)*dt(.975,ns)*sp*sqrt(1/8+1/20)
(132.86-127.44) + c(-1,1)*dt(.975,ns)*sp*sqrt(1/8+1/21)
(132.86-127.44) + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44 + c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-sqrt((var(g1)+var(g2))/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/10+1/10)
t.test(g2,g1,paried=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num<-(15.34^2/8+18.23^2/21)
num<-(15.34^2/8+18.23^2/21)^2
den<-15.34^4/8^2/7 + 18.23^4/21^2/20
mydf<-num/den
132.86-127.44 + c(-1,1)*qt(.975,df)*sqrt(15.34^2/8 +18.23^2/21)
132.86-127.44 + c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 +18.23^2/21)
library(swirl)
swirl()
10/sqrt(32)
10/sqrt(100)
32-30
(32-30)/(10/sqrt(16))
15
qt(.95,15)
dim(fs)
t.test(fs$sheight-fs$fheight)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
8
?pt
pt(2.5,15,lower.tail=FALSE)
qnorm(.975)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,8,.5,lower.tail=FALSE)
pbinom(7,8,.5,lower.tail=TRUE)
ppois(9,5,lower.tail=FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z<-qnorm(.95)
pnorm(30+z,30,lower.tail=FALSE)
pnorm(30+z,32,lower.tail=FALSE)
pnorm(30+z,32,1,lower.tail=FALSE)
pnorm(30+z*2,32,1,lower.tail=FALSE)
pnorm(30+z*2,32,2,lower.tail=FALSE)
power.t.test(16,.5,1,type="one sample", alt="one.sided")$power
power.t.test(16,.5,1,type="one.sample", alt="one.sided")$power
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = .8, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, delta = 100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n = 26, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = .8, n = 26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = .8, n = 27, sd=1, type = "one.sample", alt = "one.sided")$delta
head(pValues)
sum(pValues)
sum(pValues < 0.05)
?p.adjust
p.adjust(pValues,method="bonferroni")
sun(p.adjust(pValues,method="bonferroni"))
sum(p.adjust(pValues,method="bonferroni"))
sum(p.adjust(pValues,method="bonferroni")<0.05)
sum(p.adjust(pValues,method="BH")<0.05)
tail(trueStatus)
table(pValues2<.05,trueStatus)
05
24/500
table(p.adjust(pValues2,method="bonferroni")<.05,trueStatus)
table(p.adjust(pValues2,method="BH")<.05,trueStatus)
(1+2+3+4+5+6)*1/6
print(g2)
head(sh)
nh
median(resampleMedians)
median(resampledMedians)
median(sh)
sam<-sample(fh,nh*B,replace=TRUE)
resam<-matrix(B,nh)
resam<-matrix(sam,B,nh)
apply(resam,2,median)
meds<-apply(resam,1,median)
median(fh)-median(meds)
sd(meds)
sd(resampledMedias)
sd(resampledMedians)
d
quantile(resampledMedians,c(.025,.975))
quantile(meds,c(.025,.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat
obs<-testStat(BCcounts)
obs<-testStat(BCcounts,group)
obs
Bdata$count-Cdata$count
mean(Bdata$count)-mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
mean(perms > obs)
testStat(DEcounts,group)
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
cube <- function (x,n) {}
cube <- function (x,n) {x^3}
cube(3)
x<-1:10
if (x>5) {x<-0}
library("swirl")
swirl()
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,20,by=0.5)
seq(0,10,by=0.5)
seq(5,30,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
c(my_char,"loh")
my_name<-c(my_char,"loh")
my_name
paste(my_name,collapse=" ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x * 3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
names<-c("Bill","Gina","Kelly","Sean")
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
names<-c("patient","age","weight","bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
TRUE == TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>6)
isTRUE(6>4)
identical("twins","twins")
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3,4,5,5,5,6,6))
unqiue_vals<-lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
spply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10,replace=FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips<-sample(c(0,1), 100, replace=TRUE, prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinorm(1,size=100,prob=0.7)
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(c)
flips2<-rbinom(c(0,1),100,prob=0.7)
flips2<-rbinom(100,1,prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,10)
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
ts
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4<-strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
R.version.string
swirl()
0
install_from_swirl("R Programming")
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(cars$speed,cars$dist)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$dist,y=cars$speed)
?plot
plot(x=cars$speed,y=cars$dist,xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,ylab="Stopping Distance",xlab="Speed")
plot(x=cars$speed,y=cars$dist,xlab="Speed,ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist,xlab="Speed",ylab="Stopping Distance",main="My Plot")
plot(cars,main="My Plot")
plot(cars,sub="My Plot Subtitle")
?plot
plot(cars,col=2)
plot(cars,xlim=c(10,15))
plot(cars,pch=2)
data(mtcars)
?boxplot
boxplot(mpg~cyl,mtcars)
boxplot(formula=mpg~cyl,data=mtcars)
hist(mtcars$mpg)
library(datasets)
data(mtcars)
m<-sapply(split(mtcars$mpg,mtcars$cyl),mean)
m
26.66364 - 15.1
26.7-15.1
sapply(mtcars,cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
tapply(mpg,cyl,mean)
?with
head(mtcars)
with(mtcars,tapply(hp,cyl,mean))
209.21429-82.63636
setwd("C:/Users/s29891/datasciencecoursera/ProgrammingAssignment2")
?matrix
m <- matrix(1:4, 2,2)
m
solve(m)
?solve
source(cachematrix.R)
source(cachematrix)
?source
source("cachematrix.R")
makeCacheMatrix(m)
i<-makeCacheMatrix(m)
i<-makeCacheMatrix(t)
t<-matrix(rep(0,4),2,2)
t
i<-makeCacheMatrix(t)
source("cachematrix.R")
m
makeCacheMatrix(m)
mat <- makeCacheMatrix(m)
cacheSolve(mat)
cacheSolve(mat)
cacheSolve(mat)
t <- matix(1:16,4,4)
t <- matrix(1:16,4,4)
t
mat <- makeCacheMatrix(t)
cacheSolve(mat)
t <- matix(sample(1:10,16),4,4)
t <- matrix(sample(1:10,16),4,4)
t <- matix(sample(1:10,16,replace=TRUE),4,4)
t <- matrix(sample(1:10,16,replace=TRUE),4,4)
t
mat <- makeCacheMatrix(t)
cacheSolve(mat)
cacheSolve(mat)
